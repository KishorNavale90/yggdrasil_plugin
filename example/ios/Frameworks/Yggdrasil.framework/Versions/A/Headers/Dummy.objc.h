// Objective-C API for talking to github.com/yggdrasil-network/yggdrasil-extras/src/dummy Go package.
//   gobind -lang=objc github.com/yggdrasil-network/yggdrasil-extras/src/dummy
//
// File is generated by gobind. Do not edit.

#ifndef __Dummy_H__
#define __Dummy_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"

#include "Yggdrasil.objc.h"
#include "Config.objc.h"

@class DummyConduit;
@class DummyConduitEndpoint;
@class DummyDummyAdapter;

@interface DummyConduit : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (BOOL)read:(NSData* _Nullable)p0 n:(long* _Nullable)n error:(NSError* _Nullable* _Nullable)error;
- (BOOL)write:(NSData* _Nullable)p0 n:(long* _Nullable)n error:(NSError* _Nullable* _Nullable)error;
@end

@interface DummyConduitEndpoint : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (NSData* _Nullable)recv;
- (void)send:(NSData* _Nullable)p0;
@end

/**
 * DummyAdapter represents a running Dummy interface and extends the
yggdrasil.Adapter type. In order to use the Dummy adapter with Yggdrasil,
you should pass this object to the yggdrasil.SetRouterAdapter() function
before calling yggdrasil.Start().
 */
@interface DummyDummyAdapter : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) DummyConduit* _Nullable conduit;
// skipped field DummyAdapter.Inbox with unsupported type: github.com/Arceliar/phony.Inbox

// skipped method DummyAdapter.Act with unsupported parameter or return types

// skipped method DummyAdapter.Init with unsupported parameter or return types

/**
 * IsTAP returns true if the adapter is a TAP adapter (Layer 2) or false if it
is a TUN adapter (Layer 3).
 */
- (BOOL)isTAP;
/**
 * MTU gets the adapter's MTU. This can range between 1280 and 65535, although
the maximum value is determined by your platform. The returned value will
never exceed that of MaximumMTU().
 */
- (long)mtu;
/**
 * Name returns the name of the adapter, e.g. "dummy0". On Windows, this may
return a canonical adapter name instead.
 */
- (NSString* _Nonnull)name;
/**
 * Start the setup process for the Dummy adapter. If successful, starts the
reader actor to handle packets on that interface.
 */
- (BOOL)start:(NSError* _Nullable* _Nullable)error;
/**
 * Start the setup process for the Dummy adapter. If successful, starts the
read/write goroutines to handle packets on that interface.
 */
- (BOOL)stop:(NSError* _Nullable* _Nullable)error;
/**
 * UpdateConfig updates the Dummy module with the provided config.NodeConfig
and then signals the various module goroutines to reconfigure themselves if
needed.
 */
- (void)updateConfig:(ConfigNodeConfig* _Nullable)config;
@end

FOUNDATION_EXPORT DummyConduit* _Nullable DummyCreateConduit(void);

FOUNDATION_EXPORT DummyConduitEndpoint* _Nullable DummyCreateConduitEndpoint(DummyConduit* _Nullable c);

/**
 * DefaultIsTAP returns true if the default adapter mode for the current
platform is TAP (Layer 2) and returns false for TUN (Layer 3).
 */
FOUNDATION_EXPORT BOOL DummyDefaultIsTAP(void);

/**
 * DefaultMTU gets the default Dummy interface MTU for your platform. This can
be as high as MaximumMTU(), depending on platform, but is never lower than 1280.
 */
FOUNDATION_EXPORT long DummyDefaultMTU(void);

/**
 * DefaultName gets the default Dummy interface name for your platform.
 */
FOUNDATION_EXPORT NSString* _Nonnull DummyDefaultName(void);

/**
 * MaximumMTU returns the maximum supported Dummy interface MTU for your
platform. This can be as high as 65535, depending on platform, but is never
lower than 1280.
 */
FOUNDATION_EXPORT long DummyMaximumMTU(void);

#endif
